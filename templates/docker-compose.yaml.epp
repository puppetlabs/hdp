<%- | String $hdp_version,
      String $ui_version,
      String $frontend_version,
      String $image_prefix,
      Optional[String] $image_repository,
      Integer $hdp_port,
      Integer $hdp_query_port,
      Optional[String] $hdp_query_username,
      Optional[Sensitive[String]] $hdp_query_password,
      Integer $hdp_ui_http_port,
      Integer $hdp_ui_https_port,

      Boolean $hdp_manage_s3,
      String $hdp_s3_endpoint,
      String $hdp_s3_region,
      String $hdp_s3_access_key,
      Sensitive[String] $hdp_s3_secret_key,
      String $hdp_s3_facts_bucket,
      Boolean $hdp_s3_force_path_style,
      Boolean $hdp_s3_disable_ssl,

      Boolean $hdp_manage_es,
      String $hdp_es_host,
      Optional[String] $hdp_es_username,
      Optional[Sensitive[String]] $hdp_es_password,

      Optional[String] $ca_server,
      Optional[String] $ca_cert_file,
      Optional[String] $key_file,
      Optional[String] $cert_file,

      Boolean $ui_use_tls,
      Optional[String] $ui_cert_file,
      Optional[String] $ui_key_file,
      Optional[String] $ui_ca_cert_file,

      Boolean $mount_host_certs,

      String $dns_name,
      Array[String] $dns_alt_names,
      String $hdp_user,
      String $root_dir,
      String $max_es_memory,
      String $prometheus_namespace,
      Hash[String, String] $extra_hosts,
| -%>
version: "3"
services:
  data:
    image: "<% if $image_repository { %><%= $image_repository %>/<% } %><%= $image_prefix %>data-ingestion:<%= $hdp_version %>"
    user: "<%= $hdp_user %>:<%= $hdp_user %>"
    restart: "always"
    ports:
      - "<%= $hdp_port %>:9091"
      - "<%= $hdp_query_port %>:8080"
    environment:
      - "GIN_MODE=release"
      - "HDP_BUCKET_PREFIX="
      - "HDP_BACKENDS_S3_ENDPOINT=<%= $hdp_s3_endpoint %>"
      - "HDP_BACKENDS_S3_REGION=<%= $hdp_s3_region %>"
      - "HDP_BACKENDS_S3_ACCESS_KEY_ID=<%= $hdp_s3_access_key %>"
      - "HDP_BACKENDS_S3_SECRET_ACCESS_KEY=<%= unwrap($hdp_s3_secret_key) %>"
      - "HDP_BACKENDS_S3_FACTSBUCKET=<%= $hdp_s3_facts_bucket %>"
      - "HDP_BACKENDS_S3_DISABLESSL=<%= $hdp_s3_disable_ssl %>"
      - "HDP_BACKENDS_S3_S3FORCEPATHSTYLE=<%= $hdp_s3_force_path_style %>"
      - "HDP_BACKENDS_S3_ENABLED=true"
      - "HDP_KV_ENABLED=true"
      - "HDP_KV_HOST=redis:6379"
      - "HDP_BACKENDS_ES_HOST=<%= $hdp_es_host %>"
      <%- if $hdp_es_username { %>
      - "HDP_BACKENDS_ES_USERNAME=<%= $hdp_es_username %>"
      <%- } %>
      <%- if $hdp_es_password { %>
      - "HDP_BACKENDS_ES_PASSWORD=<%= unwrap($hdp_es_password) %>"
      <%- } %>
      - "HDP_BACKENDS_ES_ENABLED=true"
      - "HDP_BACKENDS_ES_PACKAGES=true"
      - "HDP_BACKENDS_ES_MAXFIELDLIMIT=500000"
      - "HDP_SSL_DIR=/etc/puppetlabs/puppet/ssl"
      <%- if $ca_server { %>
      - "HDP_CASERVER=<%= $ca_server %>"
      <%- } %>
      - "HDP_HTTP_UPLOAD_NO_TLS=false"
      <%- if $ca_cert_file { %>
      - "HDP_HTTP_UPLOAD_CACERTFILE=<%= $ca_cert_file %>"
      <%- } %>
      <%- if $key_file { %>
      - "HDP_HTTP_UPLOAD_KEYFILE=<%= $key_file%>"
      <%- } %>
      <%- if $cert_file { %>
      - "HDP_HTTP_UPLOAD_CERTFILE=<%= $cert_file%>"
      <%- } %>
      - "HDP_DNSNAMES=<%= join($dns_alt_names, ',') %>"
      - "HDP_NAME=<%= $dns_name %>"
      <%- if $ui_ca_cert_file { %>
      - "HDP_HTTP_QUERY_CACERTFILE=<%= $ui_ca_cert_file %>"
      - "HDP_HTTP_QUERY_DISABLE_CLIENT_AUTH=false"
      <%- } %>
      <%- if $hdp_query_username { %>
      - "HDP_HTTP_QUERY_USER=<%= $hdp_query_username %>"
      <%- } %>
      <%- if $hdp_query_password { %>
      - "HDP_HTTP_QUERY_PASSWORD=<%= unwrap($hdp_query_password) %>"
      <%- } %>
      - "HDP_HTTP_QUERY_NO_TLS=<%= !$ui_use_tls %>"
      <%- if $ui_key_file { %>
      - "HDP_HTTP_QUERY_KEYFILE=<%= $ui_key_file %>"
      <%- } %>
      <%- if $ui_cert_file { %>
      - "HDP_HTTP_QUERY_CERTFILE=<%= $ui_cert_file %>"
      <%- } %>
      - "HDP_ADMIN_PROMETHEUS_NAMESPACE=<%= $prometheus_namespace %>"
    links:
      - redis
      <%- if $hdp_manage_es { %>
      - elasticsearch
      <%- } %>
      <%- if $hdp_manage_s3 { %>
      - minio
      <%- } %>
    volumes:
      - "<%= $root_dir %>/ssl:/etc/puppetlabs/puppet/ssl"
<%- if $mount_host_certs { %>
      - "/etc/puppetlabs/puppet/ssl/certs/<%= $dns_name %>.pem:/etc/puppetlabs/puppet/ssl/data-ingestion.cert.pem:ro"
      - "/etc/puppetlabs/puppet/ssl/private_keys/<%= $dns_name %>.pem:/etc/puppetlabs/puppet/ssl/data-ingestion.key.pem:ro"
      - "/etc/puppetlabs/puppet/ssl/certs/ca.pem:/etc/puppetlabs/puppet/ssl/ca.cert.pem:ro"
<%- } %>
<%- if $ui_key_file { %>
      - "<%= $ui_key_file %>:<%= $ui_key_file %>:ro"
<%- } %>
<%- if $ui_cert_file { %>
      - "<%= $ui_cert_file %>:<%= $ui_cert_file %>:ro"
<%- } %>
<%- if $ui_ca_cert_file { %>
      - "<%= $ui_ca_cert_file %>:<%= $ui_ca_cert_file %>:ro"
<%- } %>
<%- if $hdp_manage_es { %>
  elasticsearch:
    ## TODO acwrenn - host these images ourselves, alongside data-ingestion
    image: "docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.1"
    hostname: "elasticsearch"
    environment:
      - "node.name=elasticsearch-0"
      - "discovery.type=single-node"
      - "cluster.name=hdp"
      ## TODO acwrenn - easier to preallocate, but maybe we want some slack here
      - "ES_JAVA_OPTS=-Xms<%= $max_es_memory %> -Xmx<%= $max_es_memory %>"
    volumes:
      - "<%= $root_dir %>/elastic:/usr/share/elasticsearch/data"
<%- } %>
<%- if $hdp_manage_s3 { %>
  minio:
    image: "minio/minio:RELEASE.2021-04-22T15-44-28Z"
    hostname: "minio"
    user: "<%= $hdp_user %>:<%= $hdp_user %>"
    environment:
      - "MINIO_ACCESS_KEY=<%= $hdp_s3_access_key %>"
      - "MINIO_SECRET_KEY=<%= unwrap($hdp_s3_secret_key) %>"
    volumes:
      - "<%= $root_dir %>/minio/data:/data"
      - "<%= $root_dir %>/minio/config/.minio"
    command: "server /data"
<%- } %>
  redis:
    ## TODO acwrenn - same as elasticsearch. Self-host
    image: "redis:6.2.4-buster"
    hostname: "redis"
    volumes:
      - "<%= $root_dir %>/redis:/data"
    command: "redis-server --appendonly yes"
  ui-frontend:
    image: "<% if $image_repository { %><%= $image_repository %>/<% } %><%= $image_prefix %>ui-frontend:<%= $frontend_version %>"
    ports:
      - "<%= $hdp_ui_http_port %>:80"
<%- if $ui_use_tls { %>
      - "<%= $hdp_ui_https_port %>:443"
<%- } %>
    environment:
      - "HDP_ENABLE_TLS=<%= $ui_use_tls %>"
      - "UI_HOST=ui"
      - "UI_PORT=3000"
<%- if $ui_use_tls { %>
    volumes:
      - "<%= $ui_key_file %>:/etc/ssl/key.pem:ro"
      - "<%= $ui_cert_file %>:/etc/ssl/cert.pem:ro"
<%- } %>
  ui:
    image: "<% if $image_repository { %><%= $image_repository %>/<% } %><%= $image_prefix %>ui:<%= $ui_version %>"
    environment:
      - "PORT=3000"
<%- if $ui_use_tls { %>
      - "REACT_APP_QUERY_SERVICE=https://<%= $dns_name %>:<%= $hdp_query_port %>"
<%- } else { %> 
      - "REACT_APP_QUERY_SERVICE=http://<%= $dns_name %>:<%= $hdp_query_port %>"
<%- } %>
<%- if length($extra_hosts) > 0 { %>
extra_hosts:
  <%- $extra_hosts.each |$h, $ip| { %>
  - <%= "${h}:${ip}" %>
  <%- } -%>
<%- } %>
